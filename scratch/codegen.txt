
x = [ 3, 4, 5, 6 ]
---
StaticArray(4) x;
StaticArray_init_withCArray(Number)(x, (Number[]){3,4,5,6}, 4);
OR
Array_init_withCArray(Number)(x, (Number[]){3,4,5,6}, 4)
BUT WHY NOT (IF X DOESNT ESCAPE )
Number x[] = {3,4,5,6};

// ^ should be Vector

x = [ "first" = 32,
      "second" = 42,
      "third" = 100 ]


---
Dict_init_withPairs(CString,Number)(x, (CString[]){"first","second","third"},(Number[]){32,42,100}, 3)

x = [ 1, 2, 3;
      4, 5, 6;
      7, 8, 9 ]

c = [ 1, 2, 3; 4, 5, 6; 7, 8, 9 ]

rotx =
     sin(x), cos(x), 0,
    -cos(x), sin(x), 0,
         0,      0,  0

---
Tensor2D_init_withCArray(Number)(x, (Number[]){1,2,3,4,5,6,7,8,9}, 3 , 3)

x[1:3, 4:end]
---
Tensor2D_getSlice(Number)(x, Range_new(1,3), Range_new(4,0))

y[3:5, 2:end] = x[1:3, 4:end]
---
Tensor2D_setSlice(Number)(y, Range_new(3,5), Range_new(2,0),
    Tensor2D_getSlice(Number)(x, Range_new(1,3), Range_new(4,0)))

y[2, 2:end] = A[4:end]
---
Tensor2D_setSlice(Number)(y, Range_new(2,2), Range_new(2,0),
    Vector_getSlice(Number)(x, Range_new(4,0))) // ???

y[y<5] = count(y)
---

Tensor2D_setFiltered(y, y<5, Tensor2D_count(y))

var g = y[y<5]
---
Tensor2D g;
Tensor2D_copy_filter(y, y<5, g)


x = myd["keyname"]
---
x = Dict_getval(CString, XYZType)(myd, "keyname")

myd["keybs"] = 34
---
Dict_putval(CString, Number)(myd, "keybs", 34)