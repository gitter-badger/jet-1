
// Autogenerated file, DO NOT EDIT.

typedef enum TokenKind {
    tkNullChar,
    tkKeyword_cheater,
    tkKeyword_for,
    tkKeyword_while,
    tkKeyword_if,
    tkKeyword_end,
    tkKeyword_function,
    tkKeyword_declare,
    tkKeyword_test,
    tkKeyword_check,
    tkKeyword_not,
    tkKeyword_and,
    tkKeyword_or,
    tkKeyword_in,
    tkKeyword_do,
    tkKeyword_then,
    tkKeyword_as,
    tkKeyword_else,
    tkKeyword_type,
    tkKeyword_return,
    tkKeyword_returns,
    tkKeyword_extends,
    tkKeyword_var,
    tkKeyword_let,
    tkKeyword_import,
    tkIdentifier,
    tkFunctionCall,
    tkSubscript,
    tkNumber,
    tkIdentifierResolved,
    tkFunctionCallResolved,
    tkSubscriptResolved,
    tkNumberAsInt,
    tkNumberAsDbl,
    tkNumberAsUInt,
    tkMultiDotNumber,
    tkSpaces,
    tkOneSpace,
    tkTab,
    tkNewline,
    tkLineComment,
    tkAlphabet,
    tkAmpersand,
    tkArrayClose,
    tkArrayOpen,
    tkArrayDims,
    tkAt,
    tkBraceClose,
    tkBraceOpen,
    tkDigit,
    tkHash,
    tkExclamation,
    tkPipe,
    tkOpAssign,
    tkVarAssign,
    tkOpEQ,
    tkOpNE,
    tkOpGE,
    tkOpGT,
    tkOpLE,
    tkOpLT,
    tkOpMod,
    tkOpModEq,
    tkOpResults,
    tkOpNotResults,
    tkParenClose,
    tkParenOpen,
    tkPeriod,
    tkOpComma,
    tkOpSemiColon,
    tkOpColon,
    tkStringBoundary,
    tkString,
    tkRegexBoundary,
    tkRegex,
    tkInlineBoundary,
    tkInline,
    tkUnderscore,
    tkSlash,
    tkBackslash,
    tkPlus,
    tkMinus,
    tkUnaryMinus,
    tkTimes,
    tkPower,
    tkPowerEq,
    tkTilde,
    tkDollar,
    tkUnits,
    tkUnknown,
    tkPlusEq,
    tkMinusEq,
    tkSlashEq,
    tkTimesEq,
    tkColEq,
    tkQuestion,
} TokenKind;

static const char* const tkrepr[] = {
    [tkNullChar] = "EOF",
    [tkKeyword_cheater] = "cheater",
    [tkKeyword_for] = "for",
    [tkKeyword_while] = "while",
    [tkKeyword_if] = "if",
    [tkKeyword_end] = "end",
    [tkKeyword_function] = "function",
    [tkKeyword_declare] = "declare",
    [tkKeyword_test] = "test",
    [tkKeyword_check] = "check",
    [tkKeyword_not] = "not ",
    [tkKeyword_and] = " and ",
    [tkKeyword_or] = " or ",
    [tkKeyword_in] = " in ",
    [tkKeyword_do] = " do ",
    [tkKeyword_then] = " then ",
    [tkKeyword_as] = " as ",
    [tkKeyword_else] = "else",
    [tkKeyword_type] = "type ",
    [tkKeyword_return] = "return ",
    [tkKeyword_returns] = " returns ",
    [tkKeyword_extends] = " extends ",
    [tkKeyword_var] = "var ",
    [tkKeyword_let] = "let ",
    [tkKeyword_import] = "import ",
    [tkIdentifier] = "(id)",
    [tkFunctionCall] = "(call)",
    [tkSubscript] = "(sub)",
    [tkNumber] = "'123'",
    [tkIdentifierResolved] = "[id]",
    [tkFunctionCallResolved] = "[call]",
    [tkSubscriptResolved] = "[sub]",
    [tkNumberAsInt] = "123",
    [tkNumberAsDbl] = "1.23",
    [tkNumberAsUInt] = "+123",
    [tkMultiDotNumber] = "1.2.3",
    [tkSpaces] = "(spc)",
    [tkOneSpace] = "(sp1)",
    [tkTab] = "(tab)",
    [tkNewline] = "(nl)",
    [tkLineComment] = "(cmt)",
    [tkAlphabet] = "a",
    [tkAmpersand] = "&",
    [tkArrayClose] = "]",
    [tkArrayOpen] = "[",
    [tkArrayDims] = "[:]",
    [tkAt] = "@",
    [tkBraceClose] = "}",
    [tkBraceOpen] = "{",
    [tkDigit] = "1",
    [tkHash] = "#",
    [tkExclamation] = "!",
    [tkPipe] = "|",
    [tkOpAssign] = "=",
    [tkVarAssign] = "v=",
    [tkOpEQ] = "==",
    [tkOpNE] = "!=",
    [tkOpGE] = ">=",
    [tkOpGT] = ">",
    [tkOpLE] = "<=",
    [tkOpLT] = "<",
    [tkOpMod] = "%",
    [tkOpModEq] = " %= ",
    [tkOpResults] = " -> ",
    [tkOpNotResults] = " -/> ",
    [tkParenClose] = ")",
    [tkParenOpen] = "(",
    [tkPeriod] = ".",
    [tkOpComma] = ", ",
    [tkOpSemiColon] = "; ",
    [tkOpColon] = ":",
    [tkStringBoundary] = "\"",
    [tkString] = "\"abc\"",
    [tkRegexBoundary] = "'",
    [tkRegex] = "'abc'",
    [tkInlineBoundary] = "`",
    [tkInline] = "`abc`",
    [tkUnderscore] = "_",
    [tkSlash] = "/",
    [tkBackslash] = "\\",
    [tkPlus] = "+",
    [tkMinus] = "-",
    [tkUnaryMinus] = "-",
    [tkTimes] = "*",
    [tkPower] = "^",
    [tkPowerEq] = " ^= ",
    [tkTilde] = "~",
    [tkDollar] = "$",
    [tkUnits] = "|N.m/s",
    [tkUnknown] = "(unk)",
    [tkPlusEq] = " += ",
    [tkMinusEq] = " -= ",
    [tkSlashEq] = " /= ",
    [tkTimesEq] = " *= ",
    [tkColEq] = " := ",
    [tkQuestion] = "?",
};

static const char* const tksrepr[] = {
    [tkNullChar] = "EOF",
    [tkKeyword_cheater] = "cheater",
    [tkKeyword_for] = "for ",
    [tkKeyword_while] = "while ",
    [tkKeyword_if] = "if ",
    [tkKeyword_end] = "end",
    [tkKeyword_function] = "function",
    [tkKeyword_declare] = "declare",
    [tkKeyword_test] = "test ",
    [tkKeyword_check] = "check ",
    [tkKeyword_not] = "not ",
    [tkKeyword_and] = " and ",
    [tkKeyword_or] = " or ",
    [tkKeyword_in] = " in ",
    [tkKeyword_do] = " do ",
    [tkKeyword_then] = " then ",
    [tkKeyword_as] = " as ",
    [tkKeyword_else] = "else",
    [tkKeyword_type] = "type ",
    [tkKeyword_return] = "return ",
    [tkKeyword_returns] = " returns ",
    [tkKeyword_extends] = " extends ",
    [tkKeyword_var] = "var ",
    [tkKeyword_let] = "let ",
    [tkKeyword_import] = "import ",
    [tkIdentifier] = "(id)",
    [tkFunctionCall] = "(call)",
    [tkSubscript] = "(sub)",
    [tkNumber] = "'123'",
    [tkIdentifierResolved] = "[id]",
    [tkFunctionCallResolved] = "[call]",
    [tkSubscriptResolved] = "[sub]",
    [tkNumberAsInt] = "123",
    [tkNumberAsDbl] = "1.23",
    [tkNumberAsUInt] = "+123",
    [tkMultiDotNumber] = "1.2.3",
    [tkSpaces] = "(spc)",
    [tkOneSpace] = "(sp1)",
    [tkTab] = "(tab)",
    [tkNewline] = "(nl)",
    [tkLineComment] = "(cmt)",
    [tkAlphabet] = "a",
    [tkAmpersand] = "&",
    [tkArrayClose] = "]",
    [tkArrayOpen] = "[",
    [tkArrayDims] = "[:]",
    [tkAt] = "@",
    [tkBraceClose] = "}",
    [tkBraceOpen] = "{",
    [tkDigit] = "1",
    [tkHash] = "#",
    [tkExclamation] = "!",
    [tkPipe] = "|",
    [tkOpAssign] = " = ",
    [tkVarAssign] = "v=",
    [tkOpEQ] = " == ",
    [tkOpNE] = " != ",
    [tkOpGE] = " >= ",
    [tkOpGT] = " > ",
    [tkOpLE] = " <= ",
    [tkOpLT] = " < ",
    [tkOpMod] = " % ",
    [tkOpModEq] = " %= ",
    [tkOpResults] = " -> ",
    [tkOpNotResults] = " -/> ",
    [tkParenClose] = ")",
    [tkParenOpen] = "(",
    [tkPeriod] = ".",
    [tkOpComma] = ", ",
    [tkOpSemiColon] = "; ",
    [tkOpColon] = ":",
    [tkStringBoundary] = "\"",
    [tkString] = "\"abc\"",
    [tkRegexBoundary] = "'",
    [tkRegex] = "'abc'",
    [tkInlineBoundary] = "`",
    [tkInline] = "`abc`",
    [tkUnderscore] = "_",
    [tkSlash] = " / ",
    [tkBackslash] = " \\ ",
    [tkPlus] = " + ",
    [tkMinus] = " - ",
    [tkUnaryMinus] = " -",
    [tkTimes] = " * ",
    [tkPower] = "^",
    [tkPowerEq] = " ^= ",
    [tkTilde] = "~",
    [tkDollar] = "$",
    [tkUnits] = "|N.m/s",
    [tkUnknown] = "(unk)",
    [tkPlusEq] = " += ",
    [tkMinusEq] = " -= ",
    [tkSlashEq] = " /= ",
    [tkTimesEq] = " *= ",
    [tkColEq] = " := ",
    [tkQuestion] = "?",
};

